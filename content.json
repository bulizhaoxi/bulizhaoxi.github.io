{"meta":{"title":"不理朝夕_","subtitle":null,"description":null,"author":"Yuri","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"数据类型、标识符、变量","slug":"数据类型、标识符、变量","date":"2019-09-14T10:35:50.902Z","updated":"2019-09-14T10:36:43.478Z","comments":true,"path":"2019/09/14/数据类型、标识符、变量/","link":"","permalink":"http://yoursite.com/2019/09/14/数据类型、标识符、变量/","excerpt":"","text":"Day1—-31 数据类型1.1 计算机存储单元我们知道计算机可以是用来存储数据的，但是无论是内存还是硬盘，计算机存储设备的最小信息单元叫“位（bit）”，我们又称之为“比特位”，通常小写的字母“b”表示。而计算机中最小的存储单元叫做“字节”，通常用大写字母B表示，字节是由连续的8个位组成。 存储设备中最小信息单元——“位（bit/b）” 计算机中最小的存储单元——“字节（byte/B）“ 1 B=8 b 1 byte=8 bit 其他常用存储单位 1 TB=1024 GB 1 GB=1024 MB 1 MB=1024 KB 1 KB=1024 B 1 B=8 bit1.2 数据类型java语言是强类型语言，对于每一种数据都给出了明确的数据类型，不同的数据类型也分配了不同的内存空间，所以他们表示的数据大小也是不一样的。 数据类型 基本数据类型 数值型 整数(byte[1]、short[2]、int[4]、long[8]) 浮点数(float[4]、double[8]) 字符(char[1]) 非数值型 布尔(boolean[1]) 引用数据类型 类(class) 接口(interface) 数组( [ ] ) 1.3 数据类型内存占用和取值范围 整数 byte，1字节，-128~127 short，2字节，-32768~32767 int，4字节, (-2^31)~(2^31-1) long，8字节，(-2^63)~(2^63-1) 浮点数 float，4字节 double，8字节 字符 char，2字节，0~65535 布尔 boolean，1字节，true，false 注意：整数默认为int类型，浮点数默认为double类型 1.4 类型转换1.4.1 自动类型转换把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量。 1double d=10 ; //10是 int 类型，自动转换成double。 1.4.2 强制类型转换把一个表示数据类型大的数值或者变量赋值给另一个表示数据范围小的变量。强制类型转换可能造成数据的丢失。格式： 目标数据类型 变量名=（目标数据类型）值或变量1int k=(int)88.8 ; //88.8是double类型，强制转换成int。 2 变量2.1 变量的概述变量：在程序运行中，其值可以发生改变的量。本质上说，变量是内存中一块区域。 2.2 变量的定义由变量名、数据类型、变量值组成。 2.3 变量的使用变量名=变量值注意事项： 变量名字不能重复 变量未赋值，不能使用 long类型的变量定义的时候，为了防止整数过大，要在后面加L。（给long类型赋值前的数字默认是int类型的，超出int范围的时候会报错，末尾加L是起到一个标记作用。） float类型的变量定义的时候，为了防止类型不兼容，后面要加F。（同理。）3 标识符3.1 标识符的概述标识符：是给类名，变量名，常量名，方法名，包名起名字的符号。 3.2 标识符的命名规则 由数字、字母、下划线、美元符组成 不能以数字开头 不能是关键字 区分大小写例如：符合规则：Class 、 _class 、 ak45 、 $_23不符合规则：class、233Bilibili、Str#13.3 常见命名约定小驼峰命名法——针对 方法、变量当标识符为一个单词的时候，首字母及其他字母都小写 ； 当标识符为多个单词时，第一个单词首字母小写，其他单词首字母大写。例如：name、firstName大驼峰命名法——针对 类当标识符为一个单词的时候，首字母大写，其他字母都小写 ； 当标识符为多个单词时，每个单词首字母都大写。例如：Student、GoodStudent","categories":[],"tags":[]},{"title":"Java中的注释、关键字、常量","slug":"Java中的注释、关键字、常量","date":"2019-09-14T09:03:41.827Z","updated":"2019-09-14T10:36:55.626Z","comments":true,"path":"2019/09/14/Java中的注释、关键字、常量/","link":"","permalink":"http://yoursite.com/2019/09/14/Java中的注释、关键字、常量/","excerpt":"","text":"Day01—-21 注释注释是在程序指定位置添加的说明性信息作用：提高代码的可读性。 单行注释，可以嵌套使用格式： 1//注释内容 多行注释，多行注释不能嵌套使用 格式： 1234567891011/*注释内容*/``` - 文档注释（多行） 格式：```java/** 注释内容看到了吗！*/ 软件 = 指令 + 数据 + 文档(使用者文档和开发者文档)文档注释的用途？可以使用java开发工具javadoc生成说明文档 用法：javadoc [-author][-version] -d 输出目录 源代码文件.java 注意：author(作者)字段和version(版本)字段只能写在类上。 2 关键字2.1 关键字概述关键字就是被java语言赋予了特定含义的单词。 2.2 关键字的特点 关键字的字母都是小写。 常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观。 3 常量3.1 常量描述在程序运行过程中，值不能改变的量。 3.2 常量分类 字符串常量：用双引号括起来的内容。“Hello World” 整数常量：不带小数的数字。12，36 小数常量：带小数的数字。12.4 字符常量：用单引号括起来的内容。‘A’，’4’ 布尔常量：布尔值，表示真假。true、false 空常量：一个特殊的值，空值。null","categories":[],"tags":[]},{"title":"JDK的环境配置与Java初体验","slug":"JDK的环境配置与Java初体验","date":"2019-09-14T05:28:29.605Z","updated":"2019-09-14T05:37:11.281Z","comments":true,"path":"2019/09/14/JDK的环境配置与Java初体验/","link":"","permalink":"http://yoursite.com/2019/09/14/JDK的环境配置与Java初体验/","excerpt":"","text":"Day11.计算机基础计算机，俗称电脑，可以按照程序的运行，高速的处理大量的数据。（计算机 = 硬件 + 软件）如果不装软件，叫裸机。硬件：cpu:它就是计算机的处理核心和控制核心。软件：它是按照特定顺序的指令和数据的集合。软件的分类： 系统软件：windows , linux , mac os , ios , android. 应用软件：QQ , 浏览器特点：它是在系统软件的基础上运行的。java是做应用软件的。它可以桌面程序，也可以web网页程序2.人和计算机的交互：2.1 图形界面交互特点：简单易用。在这个交互的基础上，我们做事情，只需要点点鼠标即可。 2.2 命令行交互打开cmd时，当前目录是在，你自己的用户目录下如果我要去F盘的话，切换盘符：f:注意：(如果是linux的话，不用切换盘符，因为linux是单文件系统) dir : 它是列出当前目录下的所有文件和文件夹。 cd 路径名:进入指定目录的命令 tab : 命令补全 (linux终端也可以用) cd .. : 退回上级目录 cd \\ : 回到根目录 cd / : 也可以回到根目录 （在编写代码的，反斜杠()需要转义。) 上下键：可以直接调出上次写的命令。 2.3 Java简介sun公司在1995发布的一种面向对象的语言。java核心特性之跨平台，通过什么原理实现的？是通过虚拟机（JVM）实现，具体参考原理图。 Java版本 JavaSE Java的标准版本数据类型、面向对象、数组、集合、IO流、多线程、java图形界面程序; JavaEE Java的企业版本html、css、js（动态效果)、上传组件、Servlet、Fileter。 JavaME Java的微版本 2.4 环境下载JDK(Java开发工具包) JRE（包括 JVM 和可信类库） 开发工具 下载地址：www.oracle.com安装过程：一直下一步(注意：安装路径不能有中文和空格) jdk：jdk包含jre(开发人员专用的，全称：java开发工具包) jre：可以安装也可以不安装，（java运行时环境） JDK目录： bin:该路径下存放了JDK的各种工具命令。javac和java就在这个目录。 conf:该路径下存放了JDK的相关配置信息。 jmods:该路径下的各种模块。 legal:该路径下存放JDK各个模块的授权文档。 db:自带的轻量数据库。 include:该路径下存放了一些平台特定的头文件。 jre:运行时环境。 lib:JDK工具的一些补充JAR包。 src.zip：Java的源代码。 3.环境配置3.1 配置的path环境变量的目的是什么？开发Java程序，需要使用JDK提供的开发工具，而这些工具在JDK的安装目录的bin目录下（如java.exe和javac.exe），配置paht环境变量，就可以在控制台的任意目录都是可以使用java的开发工具。没有配置环境变量时，必须在cmd中cd到安装jdk的目录的bin目录下才能执行。 3.2 配置环境变量 下载jdk 右键我的电脑，选择属性 点击左侧的”高级系统设置“，弹框中点击”环境变量“ 在下方的”系统变量“中新建。变量名为”JAVA_HOME“（此处自定义变量名，便于识别），变量值为jdk的路径，可通过浏览文件的方式选入，如 ”F:\\Tool\\Java\\JDK\\jdk1.8“，点确定。 在系统变量中找到Path，点“编辑”，在弹出的列表中点”新建“（或双击空白处）。 输入”%JAVA_HOME%\\bin“，用两个百分号括住的是刚刚配置的变量名。输入后将该条上移到最顶处，提高优先级。点”确定“。 ”环境变量窗口“点确定，”系统属性“窗口点确定。结束环境变量配置。 验证是否配置成功的方法：打开cmd，任意目录下输入”java“或”javac“后，回车，返回该命令的帮助信息，则环境配置成功。 注意：也可以不配置JAVA_HOME变量，直接在系统变量的Path中写bin目录的全路径后上移，使用JAVA_HOME变量的好处是更换JDK版本时更加方便。 3.3 假设我的机器上安装的jdk7.0，现在项目需要jdk8.0，应该怎么办？ 先把需要的jdk版本下载下来 在环境变量中修改JAVA_HOME变量的值，使其指向新的jdk。或在path环境变量中引用这个新的环境变量（不建议）。 ***尽量不要去修改path环境。 4.Java程序编写4.1 入门程序：Hello World 新建一个文本文件 把文件的后缀改成.java (注意：java源文件的文件名必须和类名一致，此处文件名应为”Demo1.java“) 通过文本编辑器打开，写如下代码： 12345class Demo1 &#123; public static void main(String args[]) &#123; System.out.println(\"Hello world!\"); &#125; &#125; 保存后，用命令 “javac Demo1.java” 编译Demo1源文件,生成.class文件 用命令 “java Demo1” 运行java程序. 4.2 Java程序开发流程 编写程序，得到Java源程序 编译程序，由编译器完成，得到Java字节码文件 运行程序","categories":[],"tags":[]},{"title":"你好呀，23","slug":"你好呀，23","date":"2019-09-08T06:52:01.000Z","updated":"2019-09-08T07:51:22.355Z","comments":true,"path":"2019/09/08/你好呀，23/","link":"","permalink":"http://yoursite.com/2019/09/08/你好呀，23/","excerpt":"","text":"第一章 但丁是只猫蓝猫 第二章 尼禄也是只猫小奶牛 嗨呀，今天要过完啦","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-09-08T06:47:25.172Z","updated":"2019-09-09T16:41:39.247Z","comments":true,"path":"2019/09/08/hello-world/","link":"","permalink":"http://yoursite.com/2019/09/08/hello-world/","excerpt":"","text":"用了一个下午的时间手动搭了这个Blog，今后会用作日常学习生活的记录。 流程利用Hexo博客框架制作一个静态博客，再通过github部署，可以通过外网访问。 官网下载nodejsnodejs下载一路点确定。 下载Git官网下载速度非常慢，这里我是网上找的好心人分享的链接，里面有各种版本。Git官网下载其他下载下载好Git后进入Git Bash进行配置，分别执行以下命令设置Github绑定的邮箱和用户名。 12$ git config --global user.name &quot;GitHub的用户名&quot;$ git config --global user.email &quot;GitHub绑定的邮箱&quot; Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。 用管理员方式打开CMD进行必要的下载。 查看node的版本 1node -v 执行以下命令行，用于安装cnpm。 1npm install -g cnpm --registry=https://registry.npm.taobao.org 执行以下命令行，用于安装Hexo框架。 1cnpm install -g hexo-cli 执行以下命令行，用于查看hexo版本，验证Hexo安装是否成功 1hexo -v 新建Blog文件夹，日后更新全在该文件夹下进行。cd到该文件夹地址，执行以下命令新建hexo。 1hexo init 完成后该文件夹下会自动生成目录。此时，该Blog具备了启动的最低条件，执行以下命令行，用于启动Blog。(s 表示 start，该命令通常做预览用。) 1hexo s 成功cmd则返回以下语句。在浏览器中访问http://localhost:4000 即可查看。当按Ctrl+C时，Blog的4000端口关闭，浏览器将访问不到博客。 1Hexo is running at http://localhost:4000.Press Ctrl+C to stop. 新建博客：在source/_posts文件下新建md格式文件（MarkDown文件）或者在Blog文件夹下执行以下命令行。就会在source/_posts文件下自动生成一个名为Hello Word ! 的空的md文件，通过编辑器给该文件添加内容。 1hexo n &quot;Hello Word ! &quot; 然后重新生成先清理 1hexo clean 重新生成 1hexo g 启动 1hexo s 将博客部署在Github(1)登录Github，新建一个库，此处库的名字格式必须为：XXX.github.io （–XXX必须是Github的用户名–）,Create。(2)在Blog文件夹下安装git插件。执行以下命令。1cnpm install --save hexo-deployer-git (3) 设置Blog文件夹下的_config文件。在编辑器中打开config文件，找到Deployment下的type, 在后面填写“git”。添加repo，内容为github库的地址。添加branch，内容为“master”。保存关闭。注意：在冒号后有必须敲一个空格，和默认格式保持一致。最终效果为： 123456# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: https://github.com/bulizhaoxi/bulizhaoxi.github.io.git branch: master (4)部署到远端。执行命令: 1hexo d 在部署的过程中会询问github账号密码，依次输入即可。成功后刷新github仓库，可以看到多出的文件，此时直接在浏览器访问仓库名即可访问博客。 参考视频：1.CodeSheep：手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo2.在hexo博客中添加图片 Hexo默认文档 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}