<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JDK的环境配置与Java初体验</title>
      <link href="/2019/09/14/JDK%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8EJava%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2019/09/14/JDK%E7%9A%84%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8EJava%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h1><h2 id="1-计算机基础"><a href="#1-计算机基础" class="headerlink" title="1.计算机基础"></a>1.计算机基础</h2><p>计算机，俗称电脑，可以按照程序的运行，高速的处理大量的数据。（计算机 = 硬件 + 软件）如果不装软件，叫裸机。<br>硬件：cpu:它就是计算机的处理核心和控制核心。<br>软件：它是按照特定顺序的指令和数据的集合。<br>软件的分类：  </p><ul><li>系统软件：windows , linux , mac os , ios , android.  </li><li>应用软件：QQ , 浏览器<br>特点：它是在系统软件的基础上运行的。java是做应用软件的。它可以桌面程序，也可以web网页程序<h2 id="2-人和计算机的交互："><a href="#2-人和计算机的交互：" class="headerlink" title="2.人和计算机的交互："></a>2.人和计算机的交互：</h2><h3 id="2-1-图形界面交互"><a href="#2-1-图形界面交互" class="headerlink" title="2.1 图形界面交互"></a>2.1 图形界面交互</h3>特点：简单易用。在这个交互的基础上，我们做事情，只需要点点鼠标即可。  <h3 id="2-2-命令行交互"><a href="#2-2-命令行交互" class="headerlink" title="2.2 命令行交互"></a>2.2 命令行交互</h3>打开cmd时，当前目录是在，你自己的用户目录下<br>如果我要去F盘的话，切换盘符：f:<br>注意：(如果是linux的话，不用切换盘符，因为linux是单文件系统)</li><li>dir : 它是列出当前目录下的所有文件和文件夹。  </li><li>cd 路径名:进入指定目录的命令  </li><li>tab : 命令补全 (linux终端也可以用)  </li><li>cd .. : 退回上级目录  </li><li>cd \ : 回到根目录  </li><li>cd / : 也可以回到根目录 （在编写代码的，反斜杠()需要转义。)  </li><li>上下键：可以直接调出上次写的命令。  <h3 id="2-3-Java简介"><a href="#2-3-Java简介" class="headerlink" title="2.3 Java简介"></a>2.3 Java简介</h3>sun公司在1995发布的一种面向对象的语言。<br>java核心特性之跨平台，通过什么原理实现的？是通过虚拟机（JVM）实现，具体参考原理图。  </li></ul><p>Java版本   </p><ul><li>JavaSE Java的标准版本<br>数据类型、面向对象、数组、集合、IO流、多线程、java图形界面程序;</li><li>JavaEE Java的企业版本<br>html、css、js（动态效果)、上传组件、Servlet、Fileter。</li><li>JavaME Java的微版本</li></ul><h3 id="2-4-环境下载"><a href="#2-4-环境下载" class="headerlink" title="2.4 环境下载"></a>2.4 环境下载</h3><p>JDK(Java开发工具包)  </p><ul><li>JRE（包括 JVM 和可信类库）</li><li>开发工具</li></ul><p>下载地址：<br><a href="http://www.oracle.com" target="_blank" rel="noopener">www.oracle.com</a><br>安装过程：一直下一步(注意：安装路径不能有中文和空格)  </p><ul><li>jdk：jdk包含jre(开发人员专用的，全称：java开发工具包)</li><li>jre：可以安装也可以不安装，（java运行时环境）  </li></ul><p>JDK目录：</p><ul><li>bin:该路径下存放了JDK的各种工具命令。javac和java就在这个目录。</li><li>conf:该路径下存放了JDK的相关配置信息。</li><li>jmods:该路径下的各种模块。</li><li>legal:该路径下存放JDK各个模块的授权文档。</li><li>db:自带的轻量数据库。</li><li>include:该路径下存放了一些平台特定的头文件。</li><li>jre:运行时环境。</li><li>lib:JDK工具的一些补充JAR包。</li><li>src.zip：Java的源代码。  </li></ul><h2 id="3-环境配置"><a href="#3-环境配置" class="headerlink" title="3.环境配置"></a>3.环境配置</h2><h3 id="3-1-配置的path环境变量的目的是什么？"><a href="#3-1-配置的path环境变量的目的是什么？" class="headerlink" title="3.1 配置的path环境变量的目的是什么？"></a>3.1 配置的path环境变量的目的是什么？</h3><p>开发Java程序，需要使用JDK提供的开发工具，而这些工具在JDK的安装目录的bin目录下（如java.exe和javac.exe），配置paht环境变量，就可以在控制台的任意目录都是可以使用java的开发工具。<br>没有配置环境变量时，必须在cmd中cd到安装jdk的目录的bin目录下才能执行。  </p><h3 id="3-2-配置环境变量"><a href="#3-2-配置环境变量" class="headerlink" title="3.2 配置环境变量"></a>3.2 配置环境变量</h3><ul><li>下载jdk</li><li>右键我的电脑，选择属性</li><li>点击左侧的”高级系统设置“，弹框中点击”环境变量“</li><li>在下方的”系统变量“中新建。变量名为”JAVA_HOME“（此处自定义变量名，便于识别），变量值为jdk的路径，可通过浏览文件的方式选入，如 ”F:\Tool\Java\JDK\jdk1.8“，点确定。</li><li>在系统变量中找到Path，点“编辑”，在弹出的列表中点”新建“（或双击空白处）。</li><li>输入”%JAVA_HOME%\bin“，用两个百分号括住的是刚刚配置的变量名。输入后将该条上移到最顶处，提高优先级。点”确定“。</li><li>”环境变量窗口“点确定，”系统属性“窗口点确定。结束环境变量配置。</li><li>验证是否配置成功的方法：打开cmd，任意目录下输入”java“或”javac“后，回车，返回该命令的帮助信息，则环境配置成功。</li><li>注意：也可以不配置JAVA_HOME变量，直接在系统变量的Path中写bin目录的全路径后上移，使用JAVA_HOME变量的好处是更换JDK版本时更加方便。</li></ul><h3 id="3-3-假设我的机器上安装的jdk7-0，现在项目需要jdk8-0，应该怎么办？"><a href="#3-3-假设我的机器上安装的jdk7-0，现在项目需要jdk8-0，应该怎么办？" class="headerlink" title="3.3 假设我的机器上安装的jdk7.0，现在项目需要jdk8.0，应该怎么办？"></a>3.3 假设我的机器上安装的jdk7.0，现在项目需要jdk8.0，应该怎么办？</h3><ul><li>先把需要的jdk版本下载下来</li><li>在环境变量中修改JAVA_HOME变量的值，使其指向新的jdk。<br>或在path环境变量中引用这个新的环境变量（不建议）。<br>  ***尽量不要去修改path环境。</li></ul><h2 id="4-Java程序编写"><a href="#4-Java程序编写" class="headerlink" title="4.Java程序编写"></a>4.Java程序编写</h2><h3 id="4-1-入门程序：Hello-World"><a href="#4-1-入门程序：Hello-World" class="headerlink" title="4.1 入门程序：Hello World"></a>4.1 入门程序：Hello World</h3><ul><li><p>新建一个文本文件</p></li><li><p>把文件的后缀改成.java (注意：java源文件的文件名必须和类名一致，此处文件名应为”Demo1.java“)</p></li><li><p>通过文本编辑器打开，写如下代码：  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;  </span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;      </span><br><span class="line">System.out.println(<span class="string">"Hello world!"</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>保存后，用命令 “javac Demo1.java” 编译Demo1源文件,生成.class文件 </p></li><li><p>用命令 “java Demo1” 运行java程序.</p><h3 id="4-2-Java程序开发流程"><a href="#4-2-Java程序开发流程" class="headerlink" title="4.2 Java程序开发流程"></a>4.2 Java程序开发流程</h3></li><li><p>编写程序，得到Java源程序</p></li><li><p>编译程序，由编译器完成，得到Java字节码文件</p></li><li><p>运行程序</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>你好呀，23</title>
      <link href="/2019/09/08/%E4%BD%A0%E5%A5%BD%E5%91%80%EF%BC%8C23/"/>
      <url>/2019/09/08/%E4%BD%A0%E5%A5%BD%E5%91%80%EF%BC%8C23/</url>
      
        <content type="html"><![CDATA[<h2 id="第一章-但丁是只猫"><a href="#第一章-但丁是只猫" class="headerlink" title="第一章 但丁是只猫"></a>第一章 但丁是只猫</h2><p>蓝猫</p><hr><h2 id="第二章-尼禄也是只猫"><a href="#第二章-尼禄也是只猫" class="headerlink" title="第二章 尼禄也是只猫"></a>第二章 尼禄也是只猫</h2><p>小奶牛</p><hr><h3 id="嗨呀，今天要过完啦"><a href="#嗨呀，今天要过完啦" class="headerlink" title="嗨呀，今天要过完啦"></a>嗨呀，今天要过完啦</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/08/hello-world/"/>
      <url>/2019/09/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>用了一个下午的时间手动搭了这个Blog，今后会用作日常学习生活的记录。</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>利用Hexo博客框架制作一个静态博客，再通过github部署，可以通过外网访问。</p><ol><li>官网下载nodejs<br><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs下载</a>一路点确定。  </li><li>下载Git<br>官网下载速度非常慢，这里我是网上找的好心人分享的链接，里面有各种版本。<br><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网下载</a><br><a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">其他下载</a><br>下载好Git后进入Git Bash进行配置，分别执行以下命令设置Github绑定的邮箱和用户名。  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;GitHub的用户名&quot;</span><br><span class="line">$ git config --global user.email &quot;GitHub绑定的邮箱&quot;</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>Git 是一个开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。  </p></blockquote><ol start="3"><li>用管理员方式打开CMD进行必要的下载。  </li></ol><p>查看node的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>执行以下命令行，用于安装cnpm。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>执行以下命令行，用于安装Hexo框架。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>执行以下命令行，用于查看hexo版本，验证Hexo安装是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>新建Blog文件夹，日后更新全在该文件夹下进行。cd到该文件夹地址，执行以下命令新建hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>完成后该文件夹下会自动生成目录。<br>此时，该Blog具备了启动的最低条件，执行以下命令行，用于启动Blog。(s 表示 start，该命令通常做预览用。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p> 成功cmd则返回以下语句。在浏览器中访问<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 即可查看。当按Ctrl+C时，Blog的4000端口关闭，浏览器将访问不到博客。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo is running at http://localhost:4000.Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>新建博客：<br>在source/_posts文件下新建md格式文件（MarkDown文件）<br>或者在Blog文件夹下执行以下命令行。就会在source/_posts文件下自动生成一个名为Hello Word ! 的空的md文件，通过编辑器给该文件添加内容。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;Hello Word ! &quot;</span><br></pre></td></tr></table></figure><p>然后重新生成<br>先清理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>重新生成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><ol start="4"><li>将博客部署在Github<br>(1)登录Github，新建一个库，此处库的名字格式必须为：XXX.github.io （–XXX必须是Github的用户名–）,Create。<br>(2)在Blog文件夹下安装git插件。执行以下命令。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li></ol><p>(3) 设置Blog文件夹下的_config文件。<br>在编辑器中打开config文件，<br>找到Deployment下的type, 在后面填写“git”。<br>添加repo，内容为github库的地址。<br>添加branch，内容为“master”。<br>保存关闭。注意：在冒号后有必须敲一个空格，和默认格式保持一致。<br>最终效果为：   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/bulizhaoxi/bulizhaoxi.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>(4)部署到远端。执行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>在部署的过程中会询问github账号密码，依次输入即可。成功后刷新github仓库，可以看到多出的文件，此时直接在浏览器访问仓库名即可访问博客。  </p><p>参考视频：<br><a href="https://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">1.CodeSheep：手把手教你从0开始搭建自己的个人博客 |无坑版视频教程| hexo</a><br><a href="https://www.cnblogs.com/codehome/p/8428738.html?utm_source=debugrun&utm_medium=referral" target="_blank" rel="noopener">2.在hexo博客中添加图片</a></p><h3 id="Hexo默认文档"><a href="#Hexo默认文档" class="headerlink" title="Hexo默认文档"></a>Hexo默认文档</h3><hr><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
